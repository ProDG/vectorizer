from unittest.mock import AsyncMock, patch

import pytest
from fastapi.testclient import TestClient

from app.core.config import settings
from app.main import app
from app.utils.for_tests import AnyFloat

client = TestClient(app)


@pytest.mark.asyncio
def test_vectorize_image_plain():
    image_vector_repr = [
        0.10702729970216751, 0.14678092300891876, 0.053794220089912415, -0.4579620957374573,
        -0.2925857901573181, 0.031588807702064514, 0.6106905341148376, -0.10550028085708618,
        -0.24336901307106018, 0.11065486818552017, 0.15290743112564087, 0.22566179931163788,
        -0.8395469188690186, 0.231580451130867, 0.015955548733472824, -0.3876151740550995,
        0.148056760430336, 0.09711657464504242, 0.06910061836242676, -0.24246662855148315,
        -0.41597703099250793, -0.01546168327331543, -0.6505663394927979, -0.01635776460170746,
        -0.700065553188324, 0.3474664092063904, 0.14556053280830383, -0.39428216218948364,
        -0.13496893644332886, -0.1331624537706375, 0.435529887676239, 0.4626871347427368,
        0.17808488011360168, 0.2850123345851898, 0.053888559341430664, 0.09432490170001984,
        -0.22230342030525208, -0.030286461114883423, -0.2598731815814972, 1.3624980449676514,
        0.4873237609863281, 0.14432694017887115, 0.1159660667181015, -0.48083603382110596,
        0.3959582448005676, -1.031440258026123, 0.013348236680030823, 0.31715744733810425,
        0.3023415207862854, 0.12186646461486816, 0.2156141847372055, -0.25385186076164246,
        -0.20510034263134003, -0.6239054203033447, -0.05769112706184387, 0.3677067458629608,
        0.46874499320983887, 0.24359391629695892, -0.0743560716509819, -0.10057160258293152,
        1.248769760131836, 0.11793947219848633, -0.3030230402946472, -0.15593481063842773,
        -0.2815401554107666, -0.6390932202339172, 0.2520284056663513, 1.0819151401519775,
        0.10451149940490723, 0.26326438784599304, -0.1346512734889984, -0.10815620422363281,
        -0.04088539630174637, 0.023698315024375916, 0.2633287310600281, -0.17906931042671204,
        0.3922451138496399, 0.1628326028585434, -0.30202463269233704, -0.7521927952766418,
        -0.15800854563713074, 0.18524670600891113, 0.22117404639720917, -0.33801108598709106,
        0.3075776994228363, -0.09437160938978195, 0.30043792724609375, -0.299286425113678,
        0.7897681593894958, -0.6880243420600891, 0.1902962327003479, -0.20954561233520508,
        -5.844912528991699, -0.12494850903749466, -0.08041545748710632, -0.44064760208129883,
        0.213288813829422, 0.479098379611969, -1.0716052055358887, 0.10731640458106995,
        0.053580235689878464, 0.09496006369590759, -0.021801773458719254, -0.2804582715034485,
        0.5111120343208313, -0.02106545865535736, -1.15036940574646, -0.12587213516235352,
        0.15018776059150696, -0.4083755910396576, -0.0473405122756958, -0.33994269371032715,
        0.07039271295070648, -0.08401148021221161, 0.12825673818588257, -0.04648151993751526,
        0.26873648166656494, 0.06393036246299744, 0.2575877904891968, -0.09243747591972351,
        0.47697913646698, 0.4990503787994385, -0.07755258679389954, -0.03851079195737839,
        -0.17395330965518951, -0.3201610743999481, 0.3661777079105377, 0.499827116727829,
        0.07130970060825348, -0.04286421835422516, -0.26417985558509827, 0.7527697086334229,
        0.027950499206781387, 0.813044548034668, -0.10567744821310043, 0.3519291281700134,
        0.04825776815414429, -0.40111732482910156, -0.09479720890522003, -0.02321479469537735,
        0.11696670949459076, -0.22011731564998627, 0.03786970674991608, 0.05621006339788437,
        -0.5779721736907959, 0.052181243896484375, -0.13053962588310242, 0.46602165699005127,
        -0.11627562344074249, 0.3566989600658417, -0.0641757920384407, 0.1268240362405777,
        0.0995727926492691, -0.5796048641204834, 0.26037168502807617, 0.5075290203094482,
        0.1438906341791153, -0.6151245832443237, -0.516013503074646, -0.11287716776132584,
        -0.1263829469680786, 0.06077200174331665, 0.2694515883922577, -0.27601349353790283,
        0.026234924793243408, -0.28777843713760376, 0.1344347894191742, 0.1223570704460144,
        0.39545851945877075, 0.49596190452575684, 0.15950536727905273, 0.25432276725769043,
        -0.24445700645446777, -0.7323628067970276, -0.1770896017551422, 0.050819769501686096,
        -0.5125995874404907, -0.17806106805801392, 0.25283753871917725, -0.09725326299667358,
        0.22607916593551636, 0.3632507026195526, -0.25328564643859863, -0.13237763941287994,
        0.12374473363161087, -0.1914631873369217, 0.05036327615380287, -0.4247068166732788,
        -0.11049477756023407, 0.310558557510376, 0.12978911399841309, 0.2349916398525238,
        0.3691006898880005, -0.26323768496513367, -0.10619896650314331, 0.09079264849424362,
        0.11277016997337341, -0.27355530858039856, -0.061420463025569916, 0.0668913722038269,
        0.0690668597817421, 0.03618292510509491, 0.1193324476480484, 0.34107455611228943,
        0.19580458104610443, 0.17799632251262665, -0.15287955105304718, -0.4888187050819397,
        -0.23863627016544342, 0.6125140190124512, -0.7012253999710083, 0.24823345243930817,
        -0.04807783663272858, 0.5520315170288086, -0.09130033850669861, -0.34294718503952026,
        0.04273459315299988, 0.00427401065826416, 1.1899166107177734, -0.5591446757316589,
        0.5332902073860168, 0.5355223417282104, 0.07507824897766113, -0.02234289050102234,
        0.3201735019683838, 0.20767974853515625, -0.5083760023117065, 0.4594167470932007,
        -0.1113324761390686, 0.1046118438243866, -0.3998054265975952, -0.07449391484260559,
        0.30110201239585876, 0.14890196919441223, -0.014515701681375504, -0.06059494614601135,
        0.15948739647865295, -0.13976481556892395, -0.07771863788366318, -0.03010900318622589,
        0.10839071869850159, -0.035114601254463196, -0.5877549052238464, -0.5512248873710632,
        0.3929162919521332, 0.3197805881500244, 0.12662941217422485, -0.13284794986248016,
        -0.17589208483695984, 0.3629089593887329, 0.08035933971405029, 0.3826383352279663,
        0.6023215055465698, -0.4416026175022125, -0.15710993111133575, 0.18963167071342468,
        -0.3145488500595093, 0.08848094940185547, 1.3832151889801025, 0.15128305554389954,
        0.0433950312435627, 0.42394644021987915, -0.020627468824386597, -0.28102004528045654,
        0.2336173802614212, -0.7148222923278809, 0.19620868563652039, 0.11216926574707031,
        -0.08898743987083435, 0.17324906587600708, 0.05123966187238693, -0.1529877632856369,
        -0.42411842942237854, -0.26650241017341614, 0.5681823492050171, 0.24267208576202393,
        0.09625851362943649, -0.30716559290885925, -0.36459237337112427, 0.1021449938416481,
        0.37051135301589966, 0.3796536326408386, -0.46419626474380493, -0.21971258521080017,
        -0.2337486743927002, -0.4424174726009369, -0.7385128736495972, -0.12301936745643616,
        -0.18490436673164368, 0.24957376718521118, -0.08213721215724945, -0.4482329785823822,
        -0.2950212359428406, -0.01784755289554596, -0.01510833203792572, -0.19778139889240265,
        0.5365736484527588, -0.3752814531326294, 0.3279358744621277, 0.13092803955078125,
        -0.46160608530044556, 0.17988592386245728, -0.33079439401626587, -0.5135108232498169,
        0.23693512380123138, 0.411185085773468, -0.202985018491745, 0.18870723247528076,
        0.5931026935577393, 0.44047799706459045, -0.2787801921367645, 0.18343797326087952,
        0.8114415407180786, -0.0004036426544189453, -0.18283936381340027, 0.31701257824897766,
        -0.37105804681777954, 0.490927129983902, 0.1583259105682373, -0.40888872742652893,
        0.04072478413581848, 1.7394702434539795, -0.17394372820854187, 0.317861407995224,
        -0.42945396900177, -0.5070738792419434, 0.24680808186531067, 0.06225033104419708,
        -0.44954001903533936, -0.10390521585941315, 0.15943962335586548, 0.23852908611297607,
        -0.26076972484588623, 0.17989608645439148, -0.21474385261535645, 0.5316379070281982,
        -0.08385247737169266, 0.2360447496175766, 0.1965649276971817, 0.2870990037918091,
        -0.39929282665252686, -0.3897097706794739, -0.21814489364624023, 0.12074880301952362,
        -0.18862110376358032, 0.04202723503112793, 0.13699330389499664, -0.27952712774276733,
        0.07003575563430786, 0.3077734112739563, -0.23997971415519714, 0.396516352891922,
        0.7104389667510986, -0.25037091970443726, -0.2341936230659485, 0.21731853485107422,
        0.08401471376419067, -0.960385262966156, -0.2859446406364441, 0.07484309375286102,
        0.8828091621398926, -0.15383848547935486, 0.002318982034921646, 0.891947329044342,
        -0.38853007555007935, 0.10653239488601685, -0.18062710762023926, -0.4451925456523895,
        -0.5783921480178833, 0.058227136731147766, -0.010880261659622192, 0.5154479146003723,
        0.7075819969177246, 0.029177576303482056, -0.03227788209915161, 0.38242703676223755,
        0.6215069890022278, 0.01611413061618805, -0.5039535164833069, 0.00804056040942669,
        -0.15078580379486084, -0.18331310153007507, -0.06350080668926239, -0.4371965825557709,
        -0.1583728790283203, 0.4938538074493408, -0.295599102973938, 0.24010588228702545,
        -0.4898039400577545, 0.19911488890647888, 0.22257450222969055, -0.362553209066391,
        0.09735278785228729, 0.10225014388561249, 0.06781899183988571, -0.20012083649635315,
        -0.23499947786331177, -0.5765894055366516, -0.7785602807998657, -0.5044383406639099,
        -0.013019382953643799, -0.002303965389728546, -0.1137818992137909, -0.341265469789505,
        -0.07823093235492706, 0.13537169992923737, 0.29126161336898804, -0.22959314286708832,
        0.2743539810180664, -0.4138176441192627, 0.5491356253623962, 0.15844601392745972,
        -0.4203777313232422, 0.2697302997112274, -0.7276381254196167, 0.16906730830669403,
        -0.05368752032518387, 0.3226875066757202, -0.0629117339849472, -0.5989075899124146,
        -0.0460456907749176, -0.10753029584884644, 0.165523961186409, -0.385170042514801,
        -0.4429548382759094, -0.19539637863636017, -0.5168871283531189, 0.3801393210887909,
        0.14532634615898132, -0.20371726155281067, 0.546339750289917, 0.4711475372314453,
        0.6294798254966736, -0.1756441593170166, -0.49085283279418945, -0.6234754920005798,
        0.47290632128715515, 0.176892951130867, -0.3630625307559967, -0.37261539697647095,
        0.2988760471343994, 0.36221152544021606, 0.0221574604511261, -0.15061378479003906,
        0.08196574449539185, 0.1452496498823166, -0.21015119552612305, -0.10883645713329315,
        -0.24360349774360657, -0.3675217628479004, 0.6934814453125, -0.4227191209793091,
        -0.052605435252189636, -0.501679003238678, -0.1257377713918686, 0.42919525504112244,
        0.3466350734233856, 0.473308265209198, 0.4507916271686554, -0.12348669022321701,
        0.027333766222000122, 0.06113898754119873, 0.5076970458030701, -0.16243386268615723,
        0.38971394300460815, -0.27684304118156433, 0.1951616406440735, -0.18807095289230347,
        0.22850948572158813, -0.16672754287719727, 0.0012090206146240234, -0.03511218726634979,
        -0.3372432589530945, -0.508660614490509, 0.05413895845413208, -0.09756992757320404,
        -0.21519653499126434, -0.34364327788352966, 0.3171168267726898, -0.3791658878326416,
        0.08533443510532379, -0.019927561283111572, -0.26681846380233765, 0.11669787764549255,
        0.4544292688369751, 0.3298436999320984, -0.013149276375770569, 0.13566845655441284,
        0.0013289451599121094, -0.3241366744041443, -0.04509327560663223, -0.07156586647033691,
        0.27230507135391235, -0.8171130418777466, 0.2404361367225647, -0.16309854388237,
        0.23060093820095062, 0.18045875430107117, -0.4383085370063782, 0.22520360350608826,
        -0.22166648507118225, 0.010175108909606934, -0.14748623967170715, 0.3683885335922241,
        1.1154649257659912, -0.1623954176902771, -0.109015092253685, -0.06784451007843018,
        0.1098642572760582, 0.4593627154827118, 0.2878180146217346, -0.10084445774555206
    ]

    with patch('app.api.routers.vectorize_routers.vectorize_content', new_callable=AsyncMock) as mock:
        mock.return_value = {
            'vector': image_vector_repr,
            'exec_time': 1.3333,
            'model': 'clip-ViT-B-32',
            'device': 'cpu'
        }
        with open('fixtures/sample.png', 'rb') as f:
            response = client.post(
                '/api/vectorize/{model_code}/image/'.format(
                    model_code='clip-ViT-B-32'
                ),
                headers={
                    'Authorization': f'Bearer {settings.auth_token}'
                },
                files={
                    'src_image': ('sample.png', f, 'image/png')
                }
            )

    assert response.status_code == 201
    assert response.json() == {
        'vector': image_vector_repr,
        'exec_time': AnyFloat(),
        'model': 'clip-ViT-B-32',
        'device': 'cpu'
    }


@pytest.mark.asyncio
def test_vectorize_image_encoded_bytes():
    image_vector_repr = (
        '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'
    )

    with patch('app.api.routers.vectorize_routers.vectorize_content', new_callable=AsyncMock) as mock:
        mock.return_value = {
            'vector': image_vector_repr,
            'exec_time': 1.3333,
            'model': 'clip-ViT-B-32',
            'device': 'cpu'
        }
        with open('fixtures/sample.png', 'rb') as f:
            response = client.post(
                '/api/vectorize/{model_code}/image/?mode=encoded_bytes'.format(
                    model_code='clip-ViT-B-32'
                ),
                headers={
                    'Authorization': f'Bearer {settings.auth_token}'
                },
                files={
                    'src_image': ('sample.png', f, 'image/png')
                }
            )

    assert response.status_code == 201
    assert response.json() == {
        'vector': image_vector_repr,
        'exec_time': AnyFloat(),
        'model': 'clip-ViT-B-32',
        'device': 'cpu'
    }
